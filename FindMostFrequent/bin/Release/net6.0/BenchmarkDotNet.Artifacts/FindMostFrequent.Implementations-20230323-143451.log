// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 3 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\kzakrys\source\repos\FindMostFrequentElement\FindMostFrequent\bin\Release\net6.0\a548a618-0951-4997-b874-0e3bceb81c7b
// command took 2.1s and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\kzakrys\source\repos\FindMostFrequentElement\FindMostFrequent\bin\Release\net6.0\a548a618-0951-4997-b874-0e3bceb81c7b
// command took 12.33s and exited with 1
// start dotnet  build -c Release --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\kzakrys\source\repos\FindMostFrequentElement\FindMostFrequent\bin\Release\net6.0\a548a618-0951-4997-b874-0e3bceb81c7b
// command took 2.33s and exited with 0
// ***** Done, took 00:00:17 (17.09 sec)   *****
// Found 3 benchmarks:
//   Implementations.GetMostFrequentWithLinq: DefaultJob
//   Implementations.GetMostFrequentWithDictionary: DefaultJob
//   Implementations.GetMostFrequentWithLinqMixedWithDictionary: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: Implementations.GetMostFrequentWithLinq: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet a548a618-0951-4997-b874-0e3bceb81c7b.dll --anonymousPipes 1416 1896 --benchmarkName FindMostFrequent.Implementations.GetMostFrequentWithLinq --job Default --benchmarkId 0 in C:\Users\kzakrys\source\repos\FindMostFrequentElement\FindMostFrequent\bin\Release\net6.0\a548a618-0951-4997-b874-0e3bceb81c7b\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 236300.00 ns, 236.3000 us/op
WorkloadJitting  1: 1 op, 4131156700.00 ns, 4.1312 s/op

OverheadJitting  2: 1 op, 400.00 ns, 400.0000 ns/op
WorkloadJitting  2: 1 op, 4258255400.00 ns, 4.2583 s/op

WorkloadWarmup   1: 1 op, 4300506300.00 ns, 4.3005 s/op
WorkloadWarmup   2: 1 op, 4202791500.00 ns, 4.2028 s/op
WorkloadWarmup   3: 1 op, 4317862100.00 ns, 4.3179 s/op
WorkloadWarmup   4: 1 op, 4231338700.00 ns, 4.2313 s/op
WorkloadWarmup   5: 1 op, 4190836600.00 ns, 4.1908 s/op
WorkloadWarmup   6: 1 op, 4158887700.00 ns, 4.1589 s/op
WorkloadWarmup   7: 1 op, 4180698200.00 ns, 4.1807 s/op
WorkloadWarmup   8: 1 op, 4176357800.00 ns, 4.1764 s/op

// BeforeActualRun
WorkloadActual   1: 1 op, 4217302900.00 ns, 4.2173 s/op
WorkloadActual   2: 1 op, 4197157000.00 ns, 4.1972 s/op
WorkloadActual   3: 1 op, 4144591100.00 ns, 4.1446 s/op
WorkloadActual   4: 1 op, 4089031000.00 ns, 4.0890 s/op
WorkloadActual   5: 1 op, 4214659300.00 ns, 4.2147 s/op
WorkloadActual   6: 1 op, 4162234700.00 ns, 4.1622 s/op
WorkloadActual   7: 1 op, 4127656100.00 ns, 4.1277 s/op
WorkloadActual   8: 1 op, 4191304000.00 ns, 4.1913 s/op
WorkloadActual   9: 1 op, 4157646400.00 ns, 4.1576 s/op
WorkloadActual  10: 1 op, 3999550300.00 ns, 3.9996 s/op
WorkloadActual  11: 1 op, 4193173600.00 ns, 4.1932 s/op
WorkloadActual  12: 1 op, 4141496900.00 ns, 4.1415 s/op
WorkloadActual  13: 1 op, 4193680500.00 ns, 4.1937 s/op
WorkloadActual  14: 1 op, 4151338900.00 ns, 4.1513 s/op
WorkloadActual  15: 1 op, 4231144800.00 ns, 4.2311 s/op

// AfterActualRun
WorkloadResult   1: 1 op, 4217302900.00 ns, 4.2173 s/op
WorkloadResult   2: 1 op, 4197157000.00 ns, 4.1972 s/op
WorkloadResult   3: 1 op, 4144591100.00 ns, 4.1446 s/op
WorkloadResult   4: 1 op, 4089031000.00 ns, 4.0890 s/op
WorkloadResult   5: 1 op, 4214659300.00 ns, 4.2147 s/op
WorkloadResult   6: 1 op, 4162234700.00 ns, 4.1622 s/op
WorkloadResult   7: 1 op, 4127656100.00 ns, 4.1277 s/op
WorkloadResult   8: 1 op, 4191304000.00 ns, 4.1913 s/op
WorkloadResult   9: 1 op, 4157646400.00 ns, 4.1576 s/op
WorkloadResult  10: 1 op, 3999550300.00 ns, 3.9996 s/op
WorkloadResult  11: 1 op, 4193173600.00 ns, 4.1932 s/op
WorkloadResult  12: 1 op, 4141496900.00 ns, 4.1415 s/op
WorkloadResult  13: 1 op, 4193680500.00 ns, 4.1937 s/op
WorkloadResult  14: 1 op, 4151338900.00 ns, 4.1513 s/op
WorkloadResult  15: 1 op, 4231144800.00 ns, 4.2311 s/op
// GC:  74 27 4 653804688 1
// Threading:  0 0 1
// Exceptions:  1

// AfterAll
// Benchmark Process 12364 has exited with code 0.

Mean = 4.161 s, StdErr = 0.015 s (0.36%), N = 15, StdDev = 0.059 s
Min = 4.000 s, Q1 = 4.143 s, Median = 4.162 s, Q3 = 4.195 s, Max = 4.231 s
IQR = 0.052 s, LowerFence = 4.064 s, UpperFence = 4.274 s
ConfidenceInterval = [4.098 s; 4.224 s] (CI 99.9%), Margin = 0.063 s (1.51% of Mean)
Skewness = -1.24, Kurtosis = 4.19, MValue = 2

// ** Remained 2 (66.7%) benchmark(s) to run. Estimated finish 2023-03-23 14:40 (0h 3m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: Implementations.GetMostFrequentWithDictionary: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet a548a618-0951-4997-b874-0e3bceb81c7b.dll --anonymousPipes 1936 1932 --benchmarkName FindMostFrequent.Implementations.GetMostFrequentWithDictionary --job Default --benchmarkId 1 in C:\Users\kzakrys\source\repos\FindMostFrequentElement\FindMostFrequent\bin\Release\net6.0\a548a618-0951-4997-b874-0e3bceb81c7b\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 210600.00 ns, 210.6000 us/op
WorkloadJitting  1: 1 op, 756122000.00 ns, 756.1220 ms/op

OverheadJitting  2: 1 op, 300.00 ns, 300.0000 ns/op
WorkloadJitting  2: 1 op, 717300500.00 ns, 717.3005 ms/op

WorkloadWarmup   1: 1 op, 725114900.00 ns, 725.1149 ms/op
WorkloadWarmup   2: 1 op, 735611700.00 ns, 735.6117 ms/op
WorkloadWarmup   3: 1 op, 770046400.00 ns, 770.0464 ms/op
WorkloadWarmup   4: 1 op, 740311300.00 ns, 740.3113 ms/op
WorkloadWarmup   5: 1 op, 719569900.00 ns, 719.5699 ms/op
WorkloadWarmup   6: 1 op, 717271900.00 ns, 717.2719 ms/op
WorkloadWarmup   7: 1 op, 727895900.00 ns, 727.8959 ms/op
WorkloadWarmup   8: 1 op, 716928900.00 ns, 716.9289 ms/op

// BeforeActualRun
WorkloadActual   1: 1 op, 721204000.00 ns, 721.2040 ms/op
WorkloadActual   2: 1 op, 711975600.00 ns, 711.9756 ms/op
WorkloadActual   3: 1 op, 717536900.00 ns, 717.5369 ms/op
WorkloadActual   4: 1 op, 755431100.00 ns, 755.4311 ms/op
WorkloadActual   5: 1 op, 713360900.00 ns, 713.3609 ms/op
WorkloadActual   6: 1 op, 740159900.00 ns, 740.1599 ms/op
WorkloadActual   7: 1 op, 733792000.00 ns, 733.7920 ms/op
WorkloadActual   8: 1 op, 739328000.00 ns, 739.3280 ms/op
WorkloadActual   9: 1 op, 740837400.00 ns, 740.8374 ms/op
WorkloadActual  10: 1 op, 729833100.00 ns, 729.8331 ms/op
WorkloadActual  11: 1 op, 721454500.00 ns, 721.4545 ms/op
WorkloadActual  12: 1 op, 735243000.00 ns, 735.2430 ms/op
WorkloadActual  13: 1 op, 726494500.00 ns, 726.4945 ms/op
WorkloadActual  14: 1 op, 723259200.00 ns, 723.2592 ms/op
WorkloadActual  15: 1 op, 734077500.00 ns, 734.0775 ms/op

// AfterActualRun
WorkloadResult   1: 1 op, 721204000.00 ns, 721.2040 ms/op
WorkloadResult   2: 1 op, 711975600.00 ns, 711.9756 ms/op
WorkloadResult   3: 1 op, 717536900.00 ns, 717.5369 ms/op
WorkloadResult   4: 1 op, 755431100.00 ns, 755.4311 ms/op
WorkloadResult   5: 1 op, 713360900.00 ns, 713.3609 ms/op
WorkloadResult   6: 1 op, 740159900.00 ns, 740.1599 ms/op
WorkloadResult   7: 1 op, 733792000.00 ns, 733.7920 ms/op
WorkloadResult   8: 1 op, 739328000.00 ns, 739.3280 ms/op
WorkloadResult   9: 1 op, 740837400.00 ns, 740.8374 ms/op
WorkloadResult  10: 1 op, 729833100.00 ns, 729.8331 ms/op
WorkloadResult  11: 1 op, 721454500.00 ns, 721.4545 ms/op
WorkloadResult  12: 1 op, 735243000.00 ns, 735.2430 ms/op
WorkloadResult  13: 1 op, 726494500.00 ns, 726.4945 ms/op
WorkloadResult  14: 1 op, 723259200.00 ns, 723.2592 ms/op
WorkloadResult  15: 1 op, 734077500.00 ns, 734.0775 ms/op
// GC:  1 1 1 231748712 1
// Threading:  0 0 1

// AfterAll
// Benchmark Process 34264 has exited with code 0.

Mean = 729.599 ms, StdErr = 3.067 ms (0.42%), N = 15, StdDev = 11.880 ms
Min = 711.976 ms, Q1 = 721.329 ms, Median = 729.833 ms, Q3 = 737.285 ms, Max = 755.431 ms
IQR = 15.956 ms, LowerFence = 697.395 ms, UpperFence = 761.220 ms
ConfidenceInterval = [716.899 ms; 742.299 ms] (CI 99.9%), Margin = 12.700 ms (1.74% of Mean)
Skewness = 0.32, Kurtosis = 2.28, MValue = 2

// ** Remained 1 (33.3%) benchmark(s) to run. Estimated finish 2023-03-23 14:38 (0h 1m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: Implementations.GetMostFrequentWithLinqMixedWithDictionary: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet a548a618-0951-4997-b874-0e3bceb81c7b.dll --anonymousPipes 1888 1376 --benchmarkName FindMostFrequent.Implementations.GetMostFrequentWithLinqMixedWithDictionary --job Default --benchmarkId 2 in C:\Users\kzakrys\source\repos\FindMostFrequentElement\FindMostFrequent\bin\Release\net6.0\a548a618-0951-4997-b874-0e3bceb81c7b\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 212600.00 ns, 212.6000 us/op
############## Wynik: 
WorkloadJitting  1: 1 op, 3383412900.00 ns, 3.3834 s/op

OverheadJitting  2: 1 op, 400.00 ns, 400.0000 ns/op
############## Wynik: 
WorkloadJitting  2: 1 op, 3565394100.00 ns, 3.5654 s/op

############## Wynik: 
WorkloadWarmup   1: 1 op, 3561343800.00 ns, 3.5613 s/op
############## Wynik: 
WorkloadWarmup   2: 1 op, 3597816200.00 ns, 3.5978 s/op
############## Wynik: 
WorkloadWarmup   3: 1 op, 3627797100.00 ns, 3.6278 s/op
############## Wynik: 
WorkloadWarmup   4: 1 op, 3521158900.00 ns, 3.5212 s/op
############## Wynik: 
WorkloadWarmup   5: 1 op, 3392836600.00 ns, 3.3928 s/op
############## Wynik: 
WorkloadWarmup   6: 1 op, 3460967700.00 ns, 3.4610 s/op
############## Wynik: 
WorkloadWarmup   7: 1 op, 3619149100.00 ns, 3.6191 s/op
############## Wynik: 
WorkloadWarmup   8: 1 op, 3542900300.00 ns, 3.5429 s/op

// BeforeActualRun
############## Wynik: 
WorkloadActual   1: 1 op, 3566286400.00 ns, 3.5663 s/op
############## Wynik: 
WorkloadActual   2: 1 op, 3511673800.00 ns, 3.5117 s/op
############## Wynik: 
WorkloadActual   3: 1 op, 3544837600.00 ns, 3.5448 s/op
############## Wynik: 
WorkloadActual   4: 1 op, 3515373600.00 ns, 3.5154 s/op
############## Wynik: 
WorkloadActual   5: 1 op, 3492156100.00 ns, 3.4922 s/op
############## Wynik: 
WorkloadActual   6: 1 op, 3533960700.00 ns, 3.5340 s/op
############## Wynik: 
WorkloadActual   7: 1 op, 3521335300.00 ns, 3.5213 s/op
############## Wynik: 
WorkloadActual   8: 1 op, 3563854400.00 ns, 3.5639 s/op
############## Wynik: 
WorkloadActual   9: 1 op, 3446845500.00 ns, 3.4468 s/op
############## Wynik: 
WorkloadActual  10: 1 op, 3521175300.00 ns, 3.5212 s/op
############## Wynik: 
WorkloadActual  11: 1 op, 3622643900.00 ns, 3.6226 s/op
############## Wynik: 
WorkloadActual  12: 1 op, 3629496000.00 ns, 3.6295 s/op
############## Wynik: 
WorkloadActual  13: 1 op, 3528239300.00 ns, 3.5282 s/op
############## Wynik: 
WorkloadActual  14: 1 op, 3528229900.00 ns, 3.5282 s/op
############## Wynik: 
WorkloadActual  15: 1 op, 3496939500.00 ns, 3.4969 s/op

// AfterActualRun
############## Wynik: 
WorkloadResult   1: 1 op, 3566286400.00 ns, 3.5663 s/op
WorkloadResult   2: 1 op, 3511673800.00 ns, 3.5117 s/op
WorkloadResult   3: 1 op, 3544837600.00 ns, 3.5448 s/op
WorkloadResult   4: 1 op, 3515373600.00 ns, 3.5154 s/op
WorkloadResult   5: 1 op, 3492156100.00 ns, 3.4922 s/op
WorkloadResult   6: 1 op, 3533960700.00 ns, 3.5340 s/op
WorkloadResult   7: 1 op, 3521335300.00 ns, 3.5213 s/op
WorkloadResult   8: 1 op, 3563854400.00 ns, 3.5639 s/op
WorkloadResult   9: 1 op, 3446845500.00 ns, 3.4468 s/op
WorkloadResult  10: 1 op, 3521175300.00 ns, 3.5212 s/op
WorkloadResult  11: 1 op, 3528239300.00 ns, 3.5282 s/op
WorkloadResult  12: 1 op, 3528229900.00 ns, 3.5282 s/op
WorkloadResult  13: 1 op, 3496939500.00 ns, 3.4969 s/op
// GC:  74 27 4 573903816 1
// Threading:  0 0 1
// Exceptions:  1

// AfterAll
// Benchmark Process 33632 has exited with code 0.

Mean = 3.521 s, StdErr = 0.009 s (0.25%), N = 13, StdDev = 0.031 s
Min = 3.447 s, Q1 = 3.512 s, Median = 3.521 s, Q3 = 3.534 s, Max = 3.566 s
IQR = 0.022 s, LowerFence = 3.478 s, UpperFence = 3.567 s
ConfidenceInterval = [3.483 s; 3.558 s] (CI 99.9%), Margin = 0.037 s (1.06% of Mean)
Skewness = -0.63, Kurtosis = 3.13, MValue = 2

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2023-03-23 14:38 (0h 0m from now) **
Successfully reverted power plan (GUID: 381b4222-f694-41f0-9685-ff5bb260df2e FriendlyName: Balanced)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\FindMostFrequent.Implementations-report.csv
  BenchmarkDotNet.Artifacts\results\FindMostFrequent.Implementations-report-github.md
  BenchmarkDotNet.Artifacts\results\FindMostFrequent.Implementations-report.html

// * Detailed results *
Implementations.GetMostFrequentWithDictionary: DefaultJob
Runtime = .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 729.599 ms, StdErr = 3.067 ms (0.42%), N = 15, StdDev = 11.880 ms
Min = 711.976 ms, Q1 = 721.329 ms, Median = 729.833 ms, Q3 = 737.285 ms, Max = 755.431 ms
IQR = 15.956 ms, LowerFence = 697.395 ms, UpperFence = 761.220 ms
ConfidenceInterval = [716.899 ms; 742.299 ms] (CI 99.9%), Margin = 12.700 ms (1.74% of Mean)
Skewness = 0.32, Kurtosis = 2.28, MValue = 2
-------------------- Histogram --------------------
[710.441 ms ; 727.982 ms) | @@@@@@@
[727.982 ms ; 761.753 ms) | @@@@@@@@
---------------------------------------------------

Implementations.GetMostFrequentWithLinqMixedWithDictionary: DefaultJob
Runtime = .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 3.521 s, StdErr = 0.009 s (0.25%), N = 13, StdDev = 0.031 s
Min = 3.447 s, Q1 = 3.512 s, Median = 3.521 s, Q3 = 3.534 s, Max = 3.566 s
IQR = 0.022 s, LowerFence = 3.478 s, UpperFence = 3.567 s
ConfidenceInterval = [3.483 s; 3.558 s] (CI 99.9%), Margin = 0.037 s (1.06% of Mean)
Skewness = -0.63, Kurtosis = 3.13, MValue = 2
-------------------- Histogram --------------------
[3.429 s ; 3.584 s) | @@@@@@@@@@@@@
---------------------------------------------------

Implementations.GetMostFrequentWithLinq: DefaultJob
Runtime = .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 4.161 s, StdErr = 0.015 s (0.36%), N = 15, StdDev = 0.059 s
Min = 4.000 s, Q1 = 4.143 s, Median = 4.162 s, Q3 = 4.195 s, Max = 4.231 s
IQR = 0.052 s, LowerFence = 4.064 s, UpperFence = 4.274 s
ConfidenceInterval = [4.098 s; 4.224 s] (CI 99.9%), Margin = 0.063 s (1.51% of Mean)
Skewness = -1.24, Kurtosis = 4.19, MValue = 2
-------------------- Histogram --------------------
[3.968 s ; 4.128 s) | @@
[4.128 s ; 4.262 s) | @@@@@@@@@@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.5, OS=Windows 10 (10.0.19044.2728/21H2/November2021Update)
Intel Core i7-10750H CPU 2.60GHz, 1 CPU, 12 logical and 6 physical cores
.NET SDK=6.0.203
  [Host]     : .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2 [AttachedDebugger]
  DefaultJob : .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2


|                                     Method |       Mean |    Error |   StdDev | Rank |       Gen0 |       Gen1 |      Gen2 | Allocated |
|------------------------------------------- |-----------:|---------:|---------:|-----:|-----------:|-----------:|----------:|----------:|
|              GetMostFrequentWithDictionary |   729.6 ms | 12.70 ms | 11.88 ms |    1 |  1000.0000 |  1000.0000 | 1000.0000 | 221.01 MB |
| GetMostFrequentWithLinqMixedWithDictionary | 3,520.8 ms | 37.48 ms | 31.30 ms |    2 | 74000.0000 | 27000.0000 | 4000.0000 | 547.32 MB |
|                    GetMostFrequentWithLinq | 4,160.8 ms | 62.87 ms | 58.80 ms |    3 | 74000.0000 | 27000.0000 | 4000.0000 | 623.52 MB |

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger

// * Hints *
Outliers
  Implementations.GetMostFrequentWithLinqMixedWithDictionary: Default -> 2 outliers were removed, 3 outliers were detected (3.45 s, 3.62 s, 3.63 s)
  Implementations.GetMostFrequentWithLinq: Default                    -> 1 outlier  was  detected (4.00 s)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen0      : GC Generation 0 collects per 1000 operations
  Gen1      : GC Generation 1 collects per 1000 operations
  Gen2      : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ms      : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:03:44 (224.74 sec), executed benchmarks: 3

Global total time: 00:04:02 (242.28 sec), executed benchmarks: 3
// * Artifacts cleanup *
