// Validating benchmarks:
// ***** BenchmarkRunner: Start   *****
// ***** Found 3 benchmark(s) in total *****
// ***** Building 1 exe(s) in Parallel: Start   *****
// start dotnet  restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\kzakrys\source\repos\FindMostFrequent\FindMostFrequent\bin\Release\net6.0\0a200346-7241-46c0-92c4-0ae8c368d68a
// command took 1.13s and exited with 0
// start dotnet  build -c Release --no-restore /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\kzakrys\source\repos\FindMostFrequent\FindMostFrequent\bin\Release\net6.0\0a200346-7241-46c0-92c4-0ae8c368d68a
// command took 12.25s and exited with 1
// start dotnet  build -c Release --no-restore --no-dependencies /p:UseSharedCompilation=false /p:BuildInParallel=false /m:1 /p:Deterministic=true /p:Optimize=true in C:\Users\kzakrys\source\repos\FindMostFrequent\FindMostFrequent\bin\Release\net6.0\0a200346-7241-46c0-92c4-0ae8c368d68a
// command took 2.32s and exited with 0
// ***** Done, took 00:00:15 (15.96 sec)   *****
// Found 3 benchmarks:
//   Implementations.GetMostFrequentWithLinq: DefaultJob
//   Implementations.GetMostFrequentWithDictionary: DefaultJob
//   Implementations.GetMostFrequentWithLinqMixedWithDictionary: DefaultJob

Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: Implementations.GetMostFrequentWithLinq: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 0a200346-7241-46c0-92c4-0ae8c368d68a.dll --anonymousPipes 1296 1300 --benchmarkName FindMostFrequent.Implementations.GetMostFrequentWithLinq --job Default --benchmarkId 0 in C:\Users\kzakrys\source\repos\FindMostFrequent\FindMostFrequent\bin\Release\net6.0\0a200346-7241-46c0-92c4-0ae8c368d68a\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 215200.00 ns, 215.2000 us/op
WorkloadJitting  1: 1 op, 153759200.00 ns, 153.7592 ms/op

WorkloadPilot    1: 2 op, 274914400.00 ns, 137.4572 ms/op
WorkloadPilot    2: 3 op, 402906900.00 ns, 134.3023 ms/op
WorkloadPilot    3: 4 op, 553487300.00 ns, 138.3718 ms/op

WorkloadWarmup   1: 4 op, 522342300.00 ns, 130.5856 ms/op
WorkloadWarmup   2: 4 op, 528573900.00 ns, 132.1435 ms/op
WorkloadWarmup   3: 4 op, 525991500.00 ns, 131.4979 ms/op
WorkloadWarmup   4: 4 op, 539206000.00 ns, 134.8015 ms/op
WorkloadWarmup   5: 4 op, 532229000.00 ns, 133.0572 ms/op
WorkloadWarmup   6: 4 op, 541852800.00 ns, 135.4632 ms/op

// BeforeActualRun
WorkloadActual   1: 4 op, 525174700.00 ns, 131.2937 ms/op
WorkloadActual   2: 4 op, 537762400.00 ns, 134.4406 ms/op
WorkloadActual   3: 4 op, 527114100.00 ns, 131.7785 ms/op
WorkloadActual   4: 4 op, 525954800.00 ns, 131.4887 ms/op
WorkloadActual   5: 4 op, 537311000.00 ns, 134.3278 ms/op
WorkloadActual   6: 4 op, 524976300.00 ns, 131.2441 ms/op
WorkloadActual   7: 4 op, 520563400.00 ns, 130.1409 ms/op
WorkloadActual   8: 4 op, 523943400.00 ns, 130.9858 ms/op
WorkloadActual   9: 4 op, 526395300.00 ns, 131.5988 ms/op
WorkloadActual  10: 4 op, 528481900.00 ns, 132.1205 ms/op
WorkloadActual  11: 4 op, 528461300.00 ns, 132.1153 ms/op
WorkloadActual  12: 4 op, 539206500.00 ns, 134.8016 ms/op
WorkloadActual  13: 4 op, 521105900.00 ns, 130.2765 ms/op
WorkloadActual  14: 4 op, 532640500.00 ns, 133.1601 ms/op
WorkloadActual  15: 4 op, 535271000.00 ns, 133.8178 ms/op

// AfterActualRun
WorkloadResult   1: 4 op, 525174700.00 ns, 131.2937 ms/op
WorkloadResult   2: 4 op, 537762400.00 ns, 134.4406 ms/op
WorkloadResult   3: 4 op, 527114100.00 ns, 131.7785 ms/op
WorkloadResult   4: 4 op, 525954800.00 ns, 131.4887 ms/op
WorkloadResult   5: 4 op, 537311000.00 ns, 134.3278 ms/op
WorkloadResult   6: 4 op, 524976300.00 ns, 131.2441 ms/op
WorkloadResult   7: 4 op, 520563400.00 ns, 130.1409 ms/op
WorkloadResult   8: 4 op, 523943400.00 ns, 130.9858 ms/op
WorkloadResult   9: 4 op, 526395300.00 ns, 131.5988 ms/op
WorkloadResult  10: 4 op, 528481900.00 ns, 132.1205 ms/op
WorkloadResult  11: 4 op, 528461300.00 ns, 132.1153 ms/op
WorkloadResult  12: 4 op, 539206500.00 ns, 134.8016 ms/op
WorkloadResult  13: 4 op, 521105900.00 ns, 130.2765 ms/op
WorkloadResult  14: 4 op, 532640500.00 ns, 133.1601 ms/op
WorkloadResult  15: 4 op, 535271000.00 ns, 133.8178 ms/op
// GC:  46 23 7 263589536 4
// Threading:  0 0 4
// Exceptions:  1

// AfterAll
// Benchmark Process 2932 has exited with code 0.

Mean = 132.239 ms, StdErr = 0.391 ms (0.30%), N = 15, StdDev = 1.513 ms
Min = 130.141 ms, Q1 = 131.269 ms, Median = 131.779 ms, Q3 = 133.489 ms, Max = 134.802 ms
IQR = 2.220 ms, LowerFence = 127.939 ms, UpperFence = 136.819 ms
ConfidenceInterval = [130.622 ms; 133.857 ms] (CI 99.9%), Margin = 1.617 ms (1.22% of Mean)
Skewness = 0.38, Kurtosis = 1.67, MValue = 2

// ** Remained 2 (66.7%) benchmark(s) to run. Estimated finish 2023-03-23 14:19 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: Implementations.GetMostFrequentWithDictionary: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 0a200346-7241-46c0-92c4-0ae8c368d68a.dll --anonymousPipes 1412 1248 --benchmarkName FindMostFrequent.Implementations.GetMostFrequentWithDictionary --job Default --benchmarkId 1 in C:\Users\kzakrys\source\repos\FindMostFrequent\FindMostFrequent\bin\Release\net6.0\0a200346-7241-46c0-92c4-0ae8c368d68a\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 339800.00 ns, 339.8000 us/op
WorkloadJitting  1: 1 op, 79352600.00 ns, 79.3526 ms/op

WorkloadPilot    1: 2 op, 154806700.00 ns, 77.4034 ms/op
WorkloadPilot    2: 3 op, 222479700.00 ns, 74.1599 ms/op
WorkloadPilot    3: 4 op, 306773400.00 ns, 76.6933 ms/op
WorkloadPilot    4: 5 op, 348708300.00 ns, 69.7417 ms/op
WorkloadPilot    5: 6 op, 420686700.00 ns, 70.1145 ms/op
WorkloadPilot    6: 7 op, 487782400.00 ns, 69.6832 ms/op
WorkloadPilot    7: 8 op, 557075800.00 ns, 69.6345 ms/op

WorkloadWarmup   1: 8 op, 564691200.00 ns, 70.5864 ms/op
WorkloadWarmup   2: 8 op, 548166800.00 ns, 68.5208 ms/op
WorkloadWarmup   3: 8 op, 578116700.00 ns, 72.2646 ms/op
WorkloadWarmup   4: 8 op, 558548500.00 ns, 69.8186 ms/op
WorkloadWarmup   5: 8 op, 600508100.00 ns, 75.0635 ms/op
WorkloadWarmup   6: 8 op, 565833200.00 ns, 70.7292 ms/op

// BeforeActualRun
WorkloadActual   1: 8 op, 549797500.00 ns, 68.7247 ms/op
WorkloadActual   2: 8 op, 555443800.00 ns, 69.4305 ms/op
WorkloadActual   3: 8 op, 539235400.00 ns, 67.4044 ms/op
WorkloadActual   4: 8 op, 544828600.00 ns, 68.1036 ms/op
WorkloadActual   5: 8 op, 564850600.00 ns, 70.6063 ms/op
WorkloadActual   6: 8 op, 574380000.00 ns, 71.7975 ms/op
WorkloadActual   7: 8 op, 548185800.00 ns, 68.5232 ms/op
WorkloadActual   8: 8 op, 552838300.00 ns, 69.1048 ms/op
WorkloadActual   9: 8 op, 556317200.00 ns, 69.5396 ms/op
WorkloadActual  10: 8 op, 551970600.00 ns, 68.9963 ms/op
WorkloadActual  11: 8 op, 548332400.00 ns, 68.5416 ms/op
WorkloadActual  12: 8 op, 552860400.00 ns, 69.1076 ms/op
WorkloadActual  13: 8 op, 550119100.00 ns, 68.7649 ms/op
WorkloadActual  14: 8 op, 553671100.00 ns, 69.2089 ms/op
WorkloadActual  15: 8 op, 551832500.00 ns, 68.9791 ms/op

// AfterActualRun
WorkloadResult   1: 8 op, 549797500.00 ns, 68.7247 ms/op
WorkloadResult   2: 8 op, 555443800.00 ns, 69.4305 ms/op
WorkloadResult   3: 8 op, 539235400.00 ns, 67.4044 ms/op
WorkloadResult   4: 8 op, 544828600.00 ns, 68.1036 ms/op
WorkloadResult   5: 8 op, 548185800.00 ns, 68.5232 ms/op
WorkloadResult   6: 8 op, 552838300.00 ns, 69.1048 ms/op
WorkloadResult   7: 8 op, 556317200.00 ns, 69.5396 ms/op
WorkloadResult   8: 8 op, 551970600.00 ns, 68.9963 ms/op
WorkloadResult   9: 8 op, 548332400.00 ns, 68.5416 ms/op
WorkloadResult  10: 8 op, 552860400.00 ns, 69.1076 ms/op
WorkloadResult  11: 8 op, 550119100.00 ns, 68.7649 ms/op
WorkloadResult  12: 8 op, 553671100.00 ns, 69.2089 ms/op
WorkloadResult  13: 8 op, 551832500.00 ns, 68.9791 ms/op
// GC:  0 0 0 590056 8
// Threading:  0 0 8

// AfterAll
// Benchmark Process 35792 has exited with code 0.

Mean = 68.802 ms, StdErr = 0.159 ms (0.23%), N = 13, StdDev = 0.574 ms
Min = 67.404 ms, Q1 = 68.542 ms, Median = 68.979 ms, Q3 = 69.108 ms, Max = 69.540 ms
IQR = 0.566 ms, LowerFence = 67.693 ms, UpperFence = 69.957 ms
ConfidenceInterval = [68.115 ms; 69.490 ms] (CI 99.9%), Margin = 0.687 ms (1.00% of Mean)
Skewness = -0.95, Kurtosis = 3.24, MValue = 2

// ** Remained 1 (33.3%) benchmark(s) to run. Estimated finish 2023-03-23 14:19 (0h 0m from now) **
Setup power plan (GUID: 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c FriendlyName: High performance)
// **************************
// Benchmark: Implementations.GetMostFrequentWithLinqMixedWithDictionary: DefaultJob
// *** Execute ***
// Launch: 1 / 1
// Execute: dotnet 0a200346-7241-46c0-92c4-0ae8c368d68a.dll --anonymousPipes 1368 1416 --benchmarkName FindMostFrequent.Implementations.GetMostFrequentWithLinqMixedWithDictionary --job Default --benchmarkId 2 in C:\Users\kzakrys\source\repos\FindMostFrequent\FindMostFrequent\bin\Release\net6.0\0a200346-7241-46c0-92c4-0ae8c368d68a\bin\Release\net6.0
// BeforeAnythingElse

// Benchmark Process Environment Information:
// Runtime=.NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2
// GC=Concurrent Workstation
// HardwareIntrinsics=AVX2,AES,BMI1,BMI2,FMA,LZCNT,PCLMUL,POPCNT VectorSize=256
// Job: DefaultJob

OverheadJitting  1: 1 op, 215700.00 ns, 215.7000 us/op
WorkloadJitting  1: 1 op, 152465700.00 ns, 152.4657 ms/op

WorkloadPilot    1: 2 op, 293257800.00 ns, 146.6289 ms/op
WorkloadPilot    2: 3 op, 404181800.00 ns, 134.7273 ms/op
WorkloadPilot    3: 4 op, 519048400.00 ns, 129.7621 ms/op

WorkloadWarmup   1: 4 op, 527339400.00 ns, 131.8348 ms/op
WorkloadWarmup   2: 4 op, 545339500.00 ns, 136.3349 ms/op
WorkloadWarmup   3: 4 op, 522174300.00 ns, 130.5436 ms/op
WorkloadWarmup   4: 4 op, 552629400.00 ns, 138.1574 ms/op
WorkloadWarmup   5: 4 op, 540846700.00 ns, 135.2117 ms/op
WorkloadWarmup   6: 4 op, 532082300.00 ns, 133.0206 ms/op

// BeforeActualRun
WorkloadActual   1: 4 op, 522760600.00 ns, 130.6901 ms/op
WorkloadActual   2: 4 op, 523045600.00 ns, 130.7614 ms/op
WorkloadActual   3: 4 op, 527311100.00 ns, 131.8278 ms/op
WorkloadActual   4: 4 op, 524135300.00 ns, 131.0338 ms/op
WorkloadActual   5: 4 op, 520501200.00 ns, 130.1253 ms/op
WorkloadActual   6: 4 op, 549191800.00 ns, 137.2979 ms/op
WorkloadActual   7: 4 op, 529844900.00 ns, 132.4612 ms/op
WorkloadActual   8: 4 op, 553129100.00 ns, 138.2823 ms/op
WorkloadActual   9: 4 op, 528905200.00 ns, 132.2263 ms/op
WorkloadActual  10: 4 op, 533564700.00 ns, 133.3912 ms/op
WorkloadActual  11: 4 op, 538875400.00 ns, 134.7189 ms/op
WorkloadActual  12: 4 op, 533949900.00 ns, 133.4875 ms/op
WorkloadActual  13: 4 op, 523656000.00 ns, 130.9140 ms/op
WorkloadActual  14: 4 op, 530281800.00 ns, 132.5704 ms/op
WorkloadActual  15: 4 op, 531136800.00 ns, 132.7842 ms/op

// AfterActualRun
WorkloadResult   1: 4 op, 522760600.00 ns, 130.6901 ms/op
WorkloadResult   2: 4 op, 523045600.00 ns, 130.7614 ms/op
WorkloadResult   3: 4 op, 527311100.00 ns, 131.8278 ms/op
WorkloadResult   4: 4 op, 524135300.00 ns, 131.0338 ms/op
WorkloadResult   5: 4 op, 520501200.00 ns, 130.1253 ms/op
WorkloadResult   6: 4 op, 529844900.00 ns, 132.4612 ms/op
WorkloadResult   7: 4 op, 528905200.00 ns, 132.2263 ms/op
WorkloadResult   8: 4 op, 533564700.00 ns, 133.3912 ms/op
WorkloadResult   9: 4 op, 538875400.00 ns, 134.7189 ms/op
WorkloadResult  10: 4 op, 533949900.00 ns, 133.4875 ms/op
WorkloadResult  11: 4 op, 523656000.00 ns, 130.9140 ms/op
WorkloadResult  12: 4 op, 530281800.00 ns, 132.5704 ms/op
WorkloadResult  13: 4 op, 531136800.00 ns, 132.7842 ms/op
// GC:  46 23 7 263522496 4
// Threading:  0 0 4

// AfterAll
// Benchmark Process 31396 has exited with code 0.

Mean = 132.076 ms, StdErr = 0.372 ms (0.28%), N = 13, StdDev = 1.341 ms
Min = 130.125 ms, Q1 = 130.914 ms, Median = 132.226 ms, Q3 = 132.784 ms, Max = 134.719 ms
IQR = 1.870 ms, LowerFence = 128.109 ms, UpperFence = 135.589 ms
ConfidenceInterval = [130.471 ms; 133.682 ms] (CI 99.9%), Margin = 1.606 ms (1.22% of Mean)
Skewness = 0.29, Kurtosis = 1.91, MValue = 2

// ** Remained 0 (0.0%) benchmark(s) to run. Estimated finish 2023-03-23 14:19 (0h 0m from now) **
Successfully reverted power plan (GUID: 381b4222-f694-41f0-9685-ff5bb260df2e FriendlyName: Balanced)
// ***** BenchmarkRunner: Finish  *****

// * Export *
  BenchmarkDotNet.Artifacts\results\FindMostFrequent.Implementations-report.csv
  BenchmarkDotNet.Artifacts\results\FindMostFrequent.Implementations-report-github.md
  BenchmarkDotNet.Artifacts\results\FindMostFrequent.Implementations-report.html

// * Detailed results *
Implementations.GetMostFrequentWithDictionary: DefaultJob
Runtime = .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 68.802 ms, StdErr = 0.159 ms (0.23%), N = 13, StdDev = 0.574 ms
Min = 67.404 ms, Q1 = 68.542 ms, Median = 68.979 ms, Q3 = 69.108 ms, Max = 69.540 ms
IQR = 0.566 ms, LowerFence = 67.693 ms, UpperFence = 69.957 ms
ConfidenceInterval = [68.115 ms; 69.490 ms] (CI 99.9%), Margin = 0.687 ms (1.00% of Mean)
Skewness = -0.95, Kurtosis = 3.24, MValue = 2
-------------------- Histogram --------------------
[67.084 ms ; 69.860 ms) | @@@@@@@@@@@@@
---------------------------------------------------

Implementations.GetMostFrequentWithLinqMixedWithDictionary: DefaultJob
Runtime = .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 132.076 ms, StdErr = 0.372 ms (0.28%), N = 13, StdDev = 1.341 ms
Min = 130.125 ms, Q1 = 130.914 ms, Median = 132.226 ms, Q3 = 132.784 ms, Max = 134.719 ms
IQR = 1.870 ms, LowerFence = 128.109 ms, UpperFence = 135.589 ms
ConfidenceInterval = [130.471 ms; 133.682 ms] (CI 99.9%), Margin = 1.606 ms (1.22% of Mean)
Skewness = 0.29, Kurtosis = 1.91, MValue = 2
-------------------- Histogram --------------------
[129.377 ms ; 135.467 ms) | @@@@@@@@@@@@@
---------------------------------------------------

Implementations.GetMostFrequentWithLinq: DefaultJob
Runtime = .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2; GC = Concurrent Workstation
Mean = 132.239 ms, StdErr = 0.391 ms (0.30%), N = 15, StdDev = 1.513 ms
Min = 130.141 ms, Q1 = 131.269 ms, Median = 131.779 ms, Q3 = 133.489 ms, Max = 134.802 ms
IQR = 2.220 ms, LowerFence = 127.939 ms, UpperFence = 136.819 ms
ConfidenceInterval = [130.622 ms; 133.857 ms] (CI 99.9%), Margin = 1.617 ms (1.22% of Mean)
Skewness = 0.38, Kurtosis = 1.67, MValue = 2
-------------------- Histogram --------------------
[129.336 ms ; 132.869 ms) | @@@@@@@@@@
[132.869 ms ; 135.607 ms) | @@@@@
---------------------------------------------------

// * Summary *

BenchmarkDotNet=v0.13.5, OS=Windows 10 (10.0.19044.2728/21H2/November2021Update)
Intel Core i7-10750H CPU 2.60GHz, 1 CPU, 12 logical and 6 physical cores
.NET SDK=6.0.203
  [Host]     : .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2 [AttachedDebugger]
  DefaultJob : .NET 6.0.15 (6.0.1523.11507), X64 RyuJIT AVX2


|                                     Method |      Mean |    Error |   StdDev | Rank |       Gen0 |      Gen1 |      Gen2 |   Allocated |
|------------------------------------------- |----------:|---------:|---------:|-----:|-----------:|----------:|----------:|------------:|
|              GetMostFrequentWithDictionary |  68.80 ms | 0.687 ms | 0.574 ms |    1 |          - |         - |         - |    72.03 KB |
| GetMostFrequentWithLinqMixedWithDictionary | 132.08 ms | 1.606 ms | 1.341 ms |    2 | 11500.0000 | 5750.0000 | 1750.0000 | 64336.55 KB |
|                    GetMostFrequentWithLinq | 132.24 ms | 1.617 ms | 1.513 ms |    2 | 11500.0000 | 5750.0000 | 1750.0000 | 64352.91 KB |

// * Warnings *
Environment
  Summary -> Benchmark was executed with attached debugger

// * Hints *
Outliers
  Implementations.GetMostFrequentWithDictionary: Default              -> 2 outliers were removed, 3 outliers were detected (67.40 ms, 70.61 ms, 71.80 ms)
  Implementations.GetMostFrequentWithLinqMixedWithDictionary: Default -> 2 outliers were removed (137.30 ms, 138.28 ms)

// * Legends *
  Mean      : Arithmetic mean of all measurements
  Error     : Half of 99.9% confidence interval
  StdDev    : Standard deviation of all measurements
  Rank      : Relative position of current benchmark mean among all benchmarks (Arabic style)
  Gen0      : GC Generation 0 collects per 1000 operations
  Gen1      : GC Generation 1 collects per 1000 operations
  Gen2      : GC Generation 2 collects per 1000 operations
  Allocated : Allocated memory per single operation (managed only, inclusive, 1KB = 1024B)
  1 ms      : 1 Millisecond (0.001 sec)

// * Diagnostic Output - MemoryDiagnoser *


// ***** BenchmarkRunner: End *****
Run time: 00:00:42 (42.09 sec), executed benchmarks: 3

Global total time: 00:00:58 (58.49 sec), executed benchmarks: 3
// * Artifacts cleanup *
